{"version":3,"file":"static/js/108.eacaa4ae.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","Pages/Movies.styled.js","Pages/Movies.jsx","REST API/api-service.js","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchFormSt = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nexport const InputTxt = styled.input`\n  top: -30px;\n  position: relative;\n  padding: 10px;\n  width: 300px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\n\nexport const SearchButton = styled.button`\n  position: relative;\n  top: -25px;\n  padding: 5px 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  &:hover {\n    background-color: white;\n    color: black;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { SearchButton, SearchFormSt, InputTxt } from './SearchForm.styled';\nimport { MdScreenSearchDesktop } from 'react-icons/md';\nconst SearchForm = ({ pushForm }) => {\n  const [input, setInput] = useState('');\n  const inputChange = evt => {\n    setInput(evt.target.value);\n  };\n  const submitForm = evt => {\n    evt.preventDefault();\n    pushForm(input.trim());\n    setInput('');\n  };\n\n  return (\n    <SearchFormSt onSubmit={submitForm}>\n      <InputTxt\n        type=\"text\"\n        placeholder=\"type something\"\n        name=\"search\"\n        value={input}\n        onChange={inputChange}\n      />\n      <SearchButton type=\"submit\">\n        Search\n        <MdScreenSearchDesktop size=\"2rem\" />\n      </SearchButton>\n    </SearchFormSt>\n  );\n};\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  pushForm: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  margin-left: 16px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { fetchData } from 'REST API/api-service';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nimport { Title } from './Movies.styled';\n\nconst Movies = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const query = searchParams.get('query');\n  let title = '';\n  useEffect(() => {\n    setIsLoading(true);\n\n    const moviesData = async () => {\n      try {\n        const responce = await fetchData(`/search/movie`, 1, query);\n        setMovieList(responce.data.results);\n      } catch {\n        setError('error');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    moviesData();\n  }, [query, searchParams]);\n\n  const handleSubmit = data => {\n    if (data === '') {\n      Notiflix.Notify.warning('Please, type your search query!');\n      return;\n    }\n    setSearchParams({ query: data });\n  };\n\n  if (movieList.length === 0) {\n    title = 'There isnt anything';\n  } else {\n    title = 'Movie list:';\n  }\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <p>Oops, something went wrong!</p>}\n      <SearchForm pushForm={handleSubmit} />\n      {query && <Title>{title}</Title>}\n      {movieList.length !== 0 && <MovieList movieList={movieList} />}\n    </div>\n  );\n};\nexport default Movies;\n","import Notiflix from 'notiflix';\nimport axios from 'axios';\n\nexport async function fetchData(FLEX_URL, page = 1, search = '') {\n  try {\n    const BASE_URL = `https://api.themoviedb.org/3`;\n    const API_KEY = `e001340a26371433e04561724452dcfa`;\n    let URL = BASE_URL + FLEX_URL + `?api_key=${API_KEY}`;\n\n    if (search) {\n      URL = URL + `&query=${search.trim()}`;\n    }\n    if (page) {\n      URL = URL + `&page=${page}`;\n    }\n    const responce = await axios.get(URL);\n    return responce;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n","import { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieGallery = styled.ul`\n  display: flex;\n  gap: 40px;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-bottom: 25px;\n`;\n\nexport const ImgPoster = styled.img`\n  width: 300px;\n  height: 450px;\n  border-bottom: 2px solid black;\n\n  transition: transform 0.3s ease-in-out;\n  &:hover {\n    border: 2px solid black;\n    border-radius: 2px;\n    transform: scale(1.1);\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const Linkk = styled(Link)`\n  text-decoration: none;\n  color: white;\n`;\n\nexport const MovieItem = styled.li`\n  max-width: 300px;\n  border: 2px solid;\n  border-radius: 2px;\n  background-color: gray;\n`;\n\nexport const Description = styled.p`\n  font-size: 20px;\n\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  MovieGallery,\n  ImgPoster,\n  MovieItem,\n  Description,\n  Linkk,\n} from './MovieList.styled';\nconst MovieList = ({ movieList }) => {\n  const location = useLocation();\n  const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500/';\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <MovieGallery>\n      {movieList.map(({ id, title, name, poster_path }) => (\n        <MovieItem key={id}>\n          <Linkk to={`/movies/${id}`} state={{ from: location }}>\n            <ImgPoster\n              src={poster_path ? BASE_URL_IMG + poster_path : defaultImg}\n              alt={title || name}\n            />\n            <Description>{title || name}</Description>\n          </Linkk>\n        </MovieItem>\n      ))}\n    </MovieGallery>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n"],"names":["SearchFormSt","styled","InputTxt","SearchButton","pushForm","useState","input","setInput","onSubmit","evt","preventDefault","trim","type","placeholder","name","value","onChange","target","size","Title","movieList","setMovieList","error","setError","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","query","get","title","useEffect","moviesData","fetchData","responce","data","results","length","Loader","Notiflix","MovieList","FLEX_URL","page","search","URL","axios","message","strokeColor","strokeWidth","animationDuration","width","visible","MovieGallery","ImgPoster","Linkk","Link","MovieItem","Description","location","useLocation","map","id","poster_path","to","state","from","src","alt"],"sourceRoot":""}