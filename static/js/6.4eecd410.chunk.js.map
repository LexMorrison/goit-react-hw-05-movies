{"version":3,"file":"static/js/6.4eecd410.chunk.js","mappings":"uOAiCA,UA5Ba,WACX,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,GAAU,oBAAqB,GAFxC,OAERC,EAFQ,OAGdR,EAAaQ,EAASC,KAAKC,SAHb,gDAKdN,EAAS,SALK,yBAOdF,GAAa,GAPC,4EAAH,qDAUfI,GACD,GAAE,KAED,2BACGL,IAAa,SAAC,IAAD,IACbE,IAAS,uBAAG,gCACZJ,EAAUY,OAAS,IAAK,SAAC,IAAD,CAAWZ,UAAWA,MAGpD,C,qHC5BM,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAyBK,GAAzB,gGAAmCC,EAAnC,+BAA0C,EAAGC,EAA7C,+BAAsD,GAAtD,SAICC,EAJD,+BAIkBH,EAAX,mBAJP,oCAMCE,IACFC,GAAS,iBAAaD,EAAOE,SAE3BH,IACFE,GAAS,gBAAYF,IAVpB,UAYoBI,EAAAA,EAAAA,IAAUF,GAZ9B,eAYGP,EAZH,yBAaIA,GAbJ,kCAeHU,IAAAA,OAAAA,QAAwB,KAAMC,SAf3B,kF,6CCaP,IAde,WACb,OACE,0BACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,4GCXYC,EAAeC,EAAAA,EAAAA,GAAH,gIAQZC,EAAYD,EAAAA,EAAAA,IAAH,8RAcTE,GAAQF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,mEAKLI,EAAYJ,EAAAA,EAAAA,GAAH,qHAOTK,EAAcL,EAAAA,EAAAA,EAAH,qE,SCPxB,EArBkB,SAAC,GAAmB,IAAjB3B,EAAgB,EAAhBA,UACbiC,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAACR,EAAD,UACG1B,EAAUmC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAApB,OACb,SAACR,EAAD,WACE,UAACF,EAAD,CAAOW,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA3C,WACE,SAACL,EAAD,CACEe,IAAKJ,EATI,mCASyBA,EAP5C,8EAQUK,IAAKP,GAASC,KAEhB,SAACN,EAAD,UAAcK,GAASC,QANXF,EADH,KAapB,C","sources":["Pages/Home.jsx","REST API/api-service.js","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { fetchData } from 'REST API/api-service';\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nconst Home = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovies = async () => {\n      try {\n        const responce = await fetchData('/trending/all/day', 1);\n        setMovieList(responce.data.results);\n      } catch {\n        setError('error');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {error && <p>Oops, something went wrong!</p>}\n      {movieList.length > 0 && <MovieList movieList={movieList} />}\n    </div>\n  );\n};\n\nexport default Home;\n","import Notiflix from 'notiflix';\nimport axios from 'axios';\n\nexport async function fetchData(FLEX_URL, page = 1, search = '') {\n  try {\n    const BASE_URL = `https://api.themoviedb.org/3`;\n    const API_KEY = `e001340a26371433e04561724452dcfa`;\n    let URL = BASE_URL + FLEX_URL + `?api_key=${API_KEY}`;\n\n    if (search) {\n      URL = URL + `&query=${search.trim()}`;\n    }\n    if (page) {\n      URL = URL + `&page=${page}`;\n    }\n    const responce = await axios.get(URL);\n    return responce;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n","import { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieGallery = styled.ul`\n  display: flex;\n  gap: 40px;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-bottom: 25px;\n`;\n\nexport const ImgPoster = styled.img`\n  width: 300px;\n  height: 450px;\n  border-bottom: 2px solid black;\n\n  transition: transform 0.3s ease-in-out;\n  &:hover {\n    border: 2px solid black;\n    border-radius: 2px;\n    transform: scale(1.1);\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const Linkk = styled(Link)`\n  text-decoration: none;\n  color: white;\n`;\n\nexport const MovieItem = styled.li`\n  max-width: 300px;\n  border: 2px solid;\n  border-radius: 2px;\n  background-color: gray;\n`;\n\nexport const Description = styled.p`\n  font-size: 20px;\n\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  MovieGallery,\n  ImgPoster,\n  MovieItem,\n  Description,\n  Linkk,\n} from './MovieList.styled';\nconst MovieList = ({ movieList }) => {\n  const location = useLocation();\n  const BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500/';\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <MovieGallery>\n      {movieList.map(({ id, title, name, poster_path }) => (\n        <MovieItem key={id}>\n          <Linkk to={`/movies/${id}`} state={{ from: location }}>\n            <ImgPoster\n              src={poster_path ? BASE_URL_IMG + poster_path : defaultImg}\n              alt={title || name}\n            />\n            <Description>{title || name}</Description>\n          </Linkk>\n        </MovieItem>\n      ))}\n    </MovieGallery>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n"],"names":["useState","movieList","setMovieList","isLoading","setIsLoading","error","setError","useEffect","getMovies","fetchData","responce","data","results","length","FLEX_URL","page","search","URL","trim","axios","Notiflix","message","strokeColor","strokeWidth","animationDuration","width","visible","MovieGallery","styled","ImgPoster","Linkk","Link","MovieItem","Description","location","useLocation","map","id","title","name","poster_path","to","state","from","src","alt"],"sourceRoot":""}