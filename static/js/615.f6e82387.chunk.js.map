{"version":3,"file":"static/js/615.f6e82387.chunk.js","mappings":"qOAGO,SAAeA,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,gGAAmCC,EAAnC,+BAA0C,EAAGC,EAA7C,+BAAsD,GAAtD,SAICC,EAJD,+BAIkBH,EAAX,mBAJP,oCAMCE,IACFC,GAAS,iBAAaD,EAAOE,SAE3BH,IACFE,GAAS,gBAAYF,IAVpB,UAYoBI,EAAAA,EAAAA,IAAUF,GAZ9B,eAYGG,EAZH,yBAaIA,GAbJ,kCAeHC,IAAAA,OAAAA,QAAwB,KAAMC,SAf3B,kF,6CCaP,IAde,WACb,OACE,0BACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,kGCXYC,EAAeC,EAAAA,EAAAA,GAAH,gIAQZC,EAAYD,EAAAA,EAAAA,IAAH,8RAcTE,GAAQF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,mEAKLI,EAAYJ,EAAAA,EAAAA,GAAH,qHAOTK,EAAcL,EAAAA,EAAAA,EAAH,qE,SCfxB,EAdkB,SAAC,GAAwC,IAAtCM,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACxC,OACE,SAACT,EAAD,UACGO,EAAUG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAApB,OACb,SAACT,EAAD,WACE,UAACF,EAAD,CAAOY,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA3C,WACE,SAACN,EAAD,CAAWgB,IAAKT,EAAYK,EAAaK,IAAKP,GAASC,KACvD,SAACP,EAAD,UAAcM,GAASC,QAHXF,EADH,KAUpB,C,sGCeD,UA9Ba,SAAC,GAAiB,IAAfS,EAAc,EAAdA,QACd,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOd,EAAP,KAAkBe,EAAlB,KACMd,GAAWe,EAAAA,EAAAA,MACjB,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbxC,EAAAA,EAAAA,GAAU,oBAAqB,GAAG0C,MAAK,SAAAnC,GACrC,GAAwB,MAApBA,EAASoC,OACX,MAAM,IAAIC,MAAM,yBAEhBP,EAAa9B,EAASsC,KAAKC,SAC3BN,GAAa,EAEhB,GACF,GAAE,KAED,2BACGD,IAAa,SAAC,IAAD,IACQ,IAArBjB,EAAUyB,SACT,SAAC,IAAD,CACEzB,UAAWA,EACXC,SAAUA,EACVC,UAAWW,MAKpB,C","sources":["REST API/api-service.js","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/Pages/Home.jsx"],"sourcesContent":["import Notiflix from 'notiflix';\nimport axios from 'axios';\n\nexport async function fetchData(FLEX_URL, page = 1, search = '') {\n  try {\n    const BASE_URL = `https://api.themoviedb.org/3`;\n    const API_KEY = `e001340a26371433e04561724452dcfa`;\n    let URL = BASE_URL + FLEX_URL + `?api_key=${API_KEY}`;\n\n    if (search) {\n      URL = URL + `&query=${search.trim()}`;\n    }\n    if (page) {\n      URL = URL + `&page=${page}`;\n    }\n    const responce = await axios.get(URL);\n    return responce;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n","import { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieGallery = styled.ul`\n  display: flex;\n  gap: 40px;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-bottom: 25px;\n`;\n\nexport const ImgPoster = styled.img`\n  width: 300px;\n  height: 450px;\n  border-bottom: 2px solid black;\n\n  transition: transform 0.3s ease-in-out;\n  &:hover {\n    border: 2px solid black;\n    border-radius: 2px;\n    transform: scale(1.1);\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const Linkk = styled(Link)`\n  text-decoration: none;\n  color: white;\n`;\n\nexport const MovieItem = styled.li`\n  max-width: 300px;\n  border: 2px solid;\n  border-radius: 2px;\n  background-color: gray;\n`;\n\nexport const Description = styled.p`\n  font-size: 20px;\n\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  MovieGallery,\n  ImgPoster,\n  MovieItem,\n  Description,\n  Linkk,\n} from './MovieList.styled';\nconst MovieList = ({ movieList, location, imgPoster }) => {\n  return (\n    <MovieGallery>\n      {movieList.map(({ id, title, name, poster_path }) => (\n        <MovieItem key={id}>\n          <Linkk to={`/movies/${id}`} state={{ from: location }}>\n            <ImgPoster src={imgPoster + poster_path} alt={title || name} />\n            <Description>{title || name}</Description>\n          </Linkk>\n        </MovieItem>\n      ))}\n    </MovieGallery>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  imgPoster: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired,\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchData } from 'REST API/api-service';\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nconst Home = ({ imgPost }) => {\n  const [movieList, setMovieList] = useState([]);\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData('/trending/all/day', 1).then(responce => {\n      if (responce.status !== 200) {\n        throw new Error('Something went wrong!');\n      } else {\n        setMovieList(responce.data.results);\n        setIsLoading(false);\n      }\n    });\n  }, []);\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {movieList.length !== 0 && (\n        <MovieList\n          movieList={movieList}\n          location={location}\n          imgPoster={imgPost}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n\nHome.propTypes = {\n  imgPost: PropTypes.string.isRequired,\n};\n"],"names":["fetchData","FLEX_URL","page","search","URL","trim","axios","responce","Notiflix","message","strokeColor","strokeWidth","animationDuration","width","visible","MovieGallery","styled","ImgPoster","Linkk","Link","MovieItem","Description","movieList","location","imgPoster","map","id","title","name","poster_path","to","state","from","src","alt","imgPost","useState","setMovieList","useLocation","isLoading","setIsLoading","useEffect","then","status","Error","data","results","length"],"sourceRoot":""}