{"version":3,"file":"static/js/613.d21ce75c.chunk.js","mappings":"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","sources":["REST API/api-service.js","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/Pages/Movies.styled.js","components/Pages/Movies.jsx"],"sourcesContent":["import Notiflix from 'notiflix';\nimport axios from 'axios';\n\nexport async function fetchData(FLEX_URL, page = 1, search = '') {\n  try {\n    const BASE_URL = `https://api.themoviedb.org/3`;\n    const API_KEY = `e001340a26371433e04561724452dcfa`;\n    let URL = BASE_URL + FLEX_URL + `?api_key=${API_KEY}`;\n\n    if (search) {\n      URL = URL + `&query=${search.trim()}`;\n    }\n    if (page) {\n      URL = URL + `&page=${page}`;\n    }\n    const responce = await axios.get(URL);\n    return responce;\n  } catch (error) {\n    Notiflix.Notify.failure(error.message);\n  }\n}\n","import { RotatingLines } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieGallery = styled.ul`\n  display: flex;\n  gap: 40px;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-bottom: 25px;\n`;\n\nexport const ImgPoster = styled.img`\n  width: 300px;\n  height: 450px;\n  border-bottom: 2px solid black;\n\n  transition: transform 0.3s ease-in-out;\n  &:hover {\n    border: 2px solid black;\n    border-radius: 2px;\n    transform: scale(1.1);\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n\nexport const Linkk = styled(Link)`\n  text-decoration: none;\n  color: white;\n`;\n\nexport const MovieItem = styled.li`\n  max-width: 300px;\n  border: 2px solid;\n  border-radius: 2px;\n  background-color: gray;\n`;\n\nexport const Description = styled.p`\n  font-size: 20px;\n\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  MovieGallery,\n  ImgPoster,\n  MovieItem,\n  Description,\n  Linkk,\n} from './MovieList.styled';\nconst MovieList = ({ movieList, location, imgPoster }) => {\n  return (\n    <MovieGallery>\n      {movieList.map(({ id, title, name, poster_path }) => (\n        <MovieItem key={id}>\n          <Linkk to={`/movies/${id}`} state={{ from: location }}>\n            <ImgPoster src={imgPoster + poster_path} alt={title || name} />\n            <Description>{title || name}</Description>\n          </Linkk>\n        </MovieItem>\n      ))}\n    </MovieGallery>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  imgPoster: PropTypes.string.isRequired,\n  location: PropTypes.object.isRequired,\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const SearchFormSt = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nexport const InputTxt = styled.input`\n  top: -30px;\n  position: relative;\n  padding: 10px;\n  width: 300px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\n\nexport const SearchButton = styled.button`\n  position: relative;\n  top: -25px;\n  padding: 5px 10px;\n  background-color: #333;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  &:hover {\n    background-color: white;\n    color: black;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { SearchButton, SearchFormSt, InputTxt } from './SearchForm.styled';\nimport { MdScreenSearchDesktop } from 'react-icons/md';\nconst SearchForm = ({ pushForm, inputValue, searchText }) => {\n  return (\n    <SearchFormSt onSubmit={pushForm}>\n      <InputTxt\n        type=\"text\"\n        placeholder=\"type something\"\n        name=\"search\"\n        value={searchText}\n        onChange={inputValue}\n      />\n      <SearchButton type=\"submit\">\n        Search\n        <MdScreenSearchDesktop size=\"2rem\" />\n      </SearchButton>\n    </SearchFormSt>\n  );\n};\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  pushForm: PropTypes.func.isRequired,\n  inputValue: PropTypes.func.isRequired,\n  searchText: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  margin-left: 16px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\nimport { fetchData } from 'REST API/api-service';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nimport { Title } from './Movies.styled';\n\nconst Movies = ({ imgPost }) => {\n  const [movieList, setMovieList] = useState([]);\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchText, setSearchText] = useState(\n    searchParams.get('search') ?? ''\n  );\n  let title = '';\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData(`/search/movie`, 1, searchText).then(responce => {\n      if (responce.status !== 200) {\n        throw new Error('Something went wrong!');\n      } else {\n        setMovieList(responce.data.results);\n        setIsLoading(false);\n      }\n    });\n  }, [searchText]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const searchValue = evt.target[0].value.trim();\n    if (!searchValue) {\n      Notiflix.Notify.warning('Please, type something!');\n    }\n\n    let localValue = searchParams.get('search');\n\n    setSearchParams({ search: localValue.trim() });\n    setSearchText(localValue.trim());\n  };\n\n  const inputChange = ({ target: { value } }) => {\n    setSearchParams({ search: value });\n  };\n  if (movieList.length === 0) {\n    title = 'There isnt anything';\n  } else {\n    title = 'Movie list:';\n  }\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      <SearchForm\n        pushForm={handleSubmit}\n        inputValue={inputChange}\n        searchText={searchParams.get('search') ?? ''}\n      />\n      {searchText && <Title>{title}</Title>}\n      {movieList.length !== 0 && (\n        <MovieList\n          movieList={movieList}\n          location={location}\n          imgPoster={imgPost}\n        />\n      )}\n    </div>\n  );\n};\nexport default Movies;\n\nMovies.propTypes = {\n  imgPost: PropTypes.string.isRequired,\n};\n"],"names":["fetchData","FLEX_URL","page","search","URL","trim","axios","responce","Notiflix","message","strokeColor","strokeWidth","animationDuration","width","visible","MovieGallery","styled","ImgPoster","Linkk","Link","MovieItem","Description","movieList","location","imgPoster","map","id","title","name","poster_path","to","state","from","src","alt","SearchFormSt","InputTxt","SearchButton","pushForm","inputValue","searchText","onSubmit","type","placeholder","value","onChange","size","Title","imgPost","useState","setMovieList","useLocation","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","get","setSearchText","useEffect","then","status","Error","data","results","length","Loader","evt","preventDefault","target","localValue","MovieList"],"sourceRoot":""}